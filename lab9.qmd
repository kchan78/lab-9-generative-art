---
title: "Lab 9: Generative Art"
author: "Katherine Chan"
format: html
editor: visual
---

```{r}
library(dplyr)
library(ggplot2)
library(tibble)
library(scales)
library(ggthemes)
```

```{r}
mpg |>
  ggplot(aes(displ, hwy, colour = drv)) + 
  geom_point()

mpg |>
  ggplot(aes(displ, hwy, colour = drv, size = cyl)) + 
  geom_point(show.legend = FALSE) + 
  theme_void() + 
  scale_color_brewer()

mpg |>
  ggplot(aes(displ, hwy, colour = drv)) + 
  geom_point(show.legend = FALSE, size = 4) + 
  geom_point(show.legend = FALSE, size = 1, colour = "#222222") + 
  coord_polar() + 
  theme_void() + 
  scale_color_brewer()
```


```{r}
#| warning: FALSE
mpg |> 
  ggplot(aes(displ, hwy, color = model)) +
  geom_point(shape = 8, show.legend = FALSE) +
  geom_spoke(aes(angle = cty, radius = cyl), show.legend = FALSE)  +
  coord_polar() + 
  theme_void() + 
  scale_color_brewer()
  
```


# My styled plot
```{r}
sample_data <- function(seed = NULL, n = 100){
  if(!is.null(seed)) set.seed(seed)
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.5, max = .5),
    y1 = y0 + runif(n, min = -.5, max = .5),
    shade = runif(n), 
    size = runif(n),
    shape = factor(sample(0:22, size = n, replace = TRUE)),
    alpha = runif(n)
  )
}
```

```{r}
sample_canva <- function(seed = NULL) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]]
}

sample_named_colours <- function(n = NULL, seed = 1) {
  if(!is.null(n)) set.seed(seed)
  sample(colours(distinct = TRUE), n)
}
```

```{r}
dat <- sample_data(n = 100, seed = 1) 
dat2 <- sample_data(n = 100, seed = 456)

pal <- sample_canva(seed = 2)
pal2 <- sample_named_colours(n = 2, seed = 7)
show_col(pal)
show_col(pal2)

#pal2 <- c("antiquewhite", "#234643")
```



```{r}
#| warning: FALSE

dat <- sample_data(n = 100, seed = 6) 
dat2 <- sample_data(n = 100, seed = 2)

pal <- sample_canva(seed = 90)
pal2 <- sample_named_colours(n = 2, seed = 8)

ggplot(
    data = dat,
    mapping = aes(
      x = x0,
      y = y0,
      xend = x1,
      yend = y1,
      colour = shade,
      size = 1/size,
      alpha = alpha
    )) + 
    scale_colour_gradientn(colours = pal) + 
    scale_fill_gradient(low = pal2[[1]], high = pal2[[2]]) +
    scale_size(range = c(0, 10)) + 
    theme_void() + 
    guides(
      colour = guide_none(),
      size = guide_none(),
      fill = guide_none(),
      shape = guide_none(),
      alpha = guide_none()
    ) +
 # coord_polar(clip = "off") +
  stat_density2d(geom="tile", 
                 aes(fill = after_stat(density)), 
                 contour = FALSE) +
  stat_density2d(data = dat2 |> mutate(x = x0 + 3,
                                       y = y0 + 9), 
                 geom="tile", 
                 aes(fill = after_stat(density)), 
                 contour = FALSE) +
    geom_point(shape = 8) + 
  geom_curve(
    data = dat2 |> mutate(size = 1/(size)), 
    aes(curvature = alpha)
  )
```